==============Content================
시스템 콜 구현은 일단 했는데 실행하고 나서 키보드 입력시 아무것도 뜨지 않아서요

6 - 1이 잘 구현이 되었다면 키보드 입력시 바로바로 출력되는것이 맞는거죠?

제가 이해하고 적용시켜본 방식은 eax, ebx 레지스터를 제외한 최대 3개의 레지스터 값을 이용해서 arg 값들을 전달하고, 기존의 레지스터 내부의
 값들의 보존을 위해서 스택에 넣어주는 부분은 syscall.c의 매크로 함수에서 해당 레지스터의 값을 pushl 해서 스택에 넣는 식으로 구현했고, 이후 스택에서 다시 레지스터로 값을 복구하는 방법은 interrupt.c 의 syscall_handler 함수에서 ret에 리턴값을 받은 뒤, arg의 갯수에 따라서 해당 레지스터에 해당하는 register int 변수에 pt 변수를 조작하여 넣어주었는데요.

여기서 어떤 부분에서 방식이 잘못된것인지 모르겠습니다.  register int 로 레지스터 변수를 선언하면 바로 직접 해당 레지스터에 접근 가능한 것으로 이해했는데 이 부분이 잘못된것일까요? 혹시 힌트나 팁이 있을까요?



==============Comment================
저 같은 경우는 명세에 있는 '함수의 리턴값을 시스템 콜 번호를 저장한 위치에 저장' 이 부분을 잘못구현해서 키보드 입력이 되지 않았었습니다.

감사합니다!

syscall_handler()에서 레지스터 값을 가져올 때 인라인 어셈블리를 사용하시는게 좋아보입니다.

감사합니다 수정했어요!


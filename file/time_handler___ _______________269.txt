==============Content================
kernel_proc함수에 있는 while문 안에 cur_process의 time_used값을 비교하여 sleep을 시키는 코드를 작성하였습니다.
그리고 time_handler안에서 tick이 증가할 때 cur_process의 time_used값도 같이 증가시키도록 코드를 짰습니다.

근데 프로세스가 wake후에 kernel_proc함수의 while문에서 무한루프를 돌길래 확인해 보았더니
tick은 증가하는데 cur_process의 time_used의 값은 증가하지 않았습니다.

이런 현상 겪어보셨거나 짐작이 가시는 분이 계시면 조언 부탁드립니다.



==============Comment================
sched.c schedule 함수 맨 마지막에 time_slice 값이 0으로 초기화 됩니다.
이 값을 초기화하기 전에 더하는 등 사용을 해 야하는것으로 아는데, 혹시 안 썼는지 확인해보세요.

time_slice 값이 time_used값에 영향을 미치는 건가요....???

저는 영향을 미친다고 생각해서 영향을 미치는 방향으로 작성중이었습니다. 틀린 방법일수도 있어요.

정확한 답변인지 모르겠습니다.  kernel_proc함수가 인터럽트를 계속 발생시키는 함수라고 알고있습니다. 때문에 그 함수안에서 printk를 쓰면 또다른 io가 발생하기떄문에 되도록printk를 스케쥴함수에서 찍어보고 time_used값을 한번 확인해보시는게 어떨까요

Time used값을 조건으로 sleep을 걸고 wake되고나서 스케쥴됐을때도 같은 time used 값이므로 다시 sleep시켜버리지 않을까요?

timer handler외에 다른 곳에서 같이 time_used를 증가시켜 준다면 서로 값이 덮어 씌워질 수 도 있을것 같습니다.

와 그러네요;;;; 덕분에 해결했습니다. 답변 모두 감사드립니다!!


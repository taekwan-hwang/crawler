==============Content================
inode_read에서 해줘야하는 작업은  현재 디스크에 저장된 정보를 불러와 리턴하는 것이라 생각했는데요. 
(디스크 정보를 tmpblock으로 받아와 이를 결과값으로 리턴)

제가 생각한 부분만 고려한다면 write와 다르게 인자로 받아온 ofsset과 buf, len이 무의미해져서  뭔가 놓치고 있는 것 같습니다.
inode_write에서는 현재 디스크에 저장된 디렉토리 정보를 업데이트하고  tmpblock에 입력해줘야하기 때문에 나머지 인자값들이 필요한데, inode_read에서는 없어도 되는 부분 아닌가요?

inode_read 팁좀 주시면 감사드리겠습니다.



==============Comment================
감사합니다. 도움주신 덕분에 해결했습니다. 적어주신 내용들은 write함수에서 이미 구현했던 내용이라 문제가 없었는데, 결국 tmpblock의 값을 diretory에 저장해주는 작업이 필요한데 , 이 작업 대신 리턴 값으로 tmpblock을 넘겨버리는 짓을 해버려서 문제가 있었습니다..

get_curde() 함수를 보시면 inode_read를 사용한게 있는데 보시면 3번째 인자에  direntry *를 보냅니다. 이거를 참고하셔서  inode_read()에서는 datablock을 불러와 tmpblock에 저장하고 offset의 위치의  direntry 를 보내주는 식으로 저는 만들었습니다.

inode_read()함수가 호출되는 부분에서 파라미터들의 타입들을 고려해보시면 좋겠습니다. 저도 buf에 대해서는 저장된 정보를 불러와 리턴시킬 요량으로 tmpblock의 인자로 보내진 offset에 해당하는 아이노드 정보를 저장하는 것으로 inode_read함수를 생각하였습니다.

direntry부분을 쓰시려면 받아온 tmp블록에서 몇번째에 캐스팅해서 memcpy를 하셔야 할지 num_direntry함수를 이용하여 몇번블록인지 인덱스에 접근하여 *64를 하여 사용했습니다.


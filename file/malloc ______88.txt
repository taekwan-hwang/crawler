==============Content================
6-2 malloc 구현을 계속 보고있는데 전혀 감을 잡지 못하고 있어서 질문올립니다. 
(주석도 다 확인했는데, 실제 코딩 시 이해가 안 가서 어떻게 질문해야할지 모르겠네요..)

1. block_checking은 할당 상태를 확인해서 할당 가능한 페이지 주소를 찾고, block_getaddr는 할당된 블록의 주소를 받아오는 것이 맞나요?
2.  block_getaddr의 경우 여러 블록들이 있을 경우 블록의 시작주소는 매번 변하게 되어있는데,  page_addr가 페이지 시작주소면 고정된 값을 가지게되는게 아닌가요?
3.     int cut_size;			// block size provided by Buddy algorithm.
	int block_size;			// size of memory requested by process.
위의 블럭 디스크립터 구조체의 두 변수의 차이가 정확히 무엇인가요??
4. 어떤식으로 구상을 해야는지 참고할만한 주소나 팁이 있다면 부탁드립니다..



==============Comment================
다른 답변들을 봤을때, 해당 함수는 프로토 타입이고,  편하게 구현하라고 만들어논 것이라 생각해서 저는 하나 함수만 이용해서 필요한 작업을 했습니다. 구조체에 있는 변수들이 어떤것을 의미하는지 잘 파악해서 할당하고 해제하면 될거같아요.

1,2번 함수는 꼭 구현할 필요가 없어서 저도 구현하지않고 과제를 수행했습니다.
3. block_size는 malloc_test함수에서 요청받은 메모리의 크기입니다. cut_size함수는 요청받은 메모리크기를 buddy알고리즘으로 할당할때 필요한 메모리크기입니다.  쉽게말하자면, block_size 만큼 달라고 하면 그 값에 가장 알맞는 cut_size를 떼주는 겁니다.
4.  명세서그림들과 malloc.c의 함수들을 잘보시기 바랍니다..

1. block_checking 함수는 받아온 사이즈의 크기를 그 위치에 저장할 수 있는지에 대한 여부를 검사하고
2. block_getaddr은 checking을 한 그 위치에 malloc을 할당해준다고 생각하며 구현했습니다.
3. 명세를 자세히 보시면 cut_size에 알맞은 메모리를 만들어 주는것입니다. 예를들어 132바이트의 메모리를 프로세스가 요청했다면 block_size는 256바이트의 블록을 할당하겠죠! 이부분에선 명세를 다시한번 자세히 읽어보시길 바랍니다.
4. malloc.h에 있는 구조체에 대한 내용을 하나하나 적어가며 각자의 역할에 대해서 써놓고 과제를 수행해보니 조금 원활했습니다.


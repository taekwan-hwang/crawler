==============Content================
case 2 의 process 1 과 process 3 에 대한 배열 exchange 관련한 답변들을 읽어도 이해가 잘 안되서 질문합니다.

일단 교수님께서는 rlist, slist 를 참고하여서 코드를 짜라고 하셔서 이와 비슷한 방법으로

active 있던 프로세스가 만약 sleep 상태로 가면 그때 active 에 있던 process 를 expired 로 옮기고,  wake 시점에서 만약 expired 안에 있는 프로세스가 time_slice == 60 을 충족시키지 못할경우 다시 active 배열 안으로 들어가도록 설계하고 결과도 명세대로 얼추 나왔습니다.

근데 명세에서는 expired 배열에는 time_slice 를 모두 채운 프로세스만 들어갈 수 있다고 해놓아서, 아무리 봐도 제가 한 방법은 잘못된 방법 같습니다.

rlist, slist 를 참고해서 만들만한 방법은 저 방법밖에 떠오르지 않는데, 혹시 다른 방법이 있는건가요?

------------------

방금 생각났습니다만 혹시 active, expired 외에 다른 리스트 배열을 만들어야 할까요?

------------------

아 그리고  case 2에 대해서 콘솔창이 작아서 위에 짤리는 부분이 있는데, idle()이 while(1) 루프를 돌다보니까 page up 키가 먹지 않는거 같습니다. sleep() 으로 천천히 보려고 시도해봤는데 해당 헤더가 폴더 내부에 없는것 같아서 이렇게 확인도 못할거 같은데 혹시 console 창에서 잘린 부분을 확인할 수 있는 방법이 있을까요?



==============Comment================
콘솔창 잘린 부분은 bochs 폴더의 test.out 파일을 od명령어로 열면 보실수 있습니다

아 test.out 으로만 열람해야하는거군요 감사합니다!

아 그리고 저는 active배열 expired배열 slist 리스트 총 3개의 자료구조를 사용해서 배열 두개에는 run인 state들만 있도록 하였고 io대기중인 process는 slist에서 관리하였습니다. 이방법이 맞는지 확실하진 않지만 저는 이 방식으로 명세를 이해했습니다

아 slist 자체를 활용하는것도 방법이겠군요 감사합니다!!


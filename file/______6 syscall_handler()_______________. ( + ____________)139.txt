==============Content================
명세서에서 함수의 리턴값을 SYS_NUM이 저장되어있는 곳에 저장하라고 했는데, 
syscall_handler()에서 *(pt+3) = ret을 수정한 다음 프로그램이 돌아가도록 하라는 건지
아니면 단순히 저장을 하라는 건지 어느게 맞나요?

그리고  *(pt+3)에서 왜 3을 더하는지 알 수 있을까요?

(+추가질문)
기존의 스택에 넣는 방법에서 pt를 하나씩 증가시키면서 arg를 받아오다가 마지막에 pt+3을 해서 리턴값을 저장하는데, 인자의 수에 관계없이 오프셋이 3으로 고정인 이유를 혹시 알 수 있을까요?
그리고 기존의 방법으로는 인자가 2개인 함수이면 SYS_NUM/arg0/arg1/?/ ? / ? / ret 처럼 되는 데 
?에는 어떠한 값이 채워지는건가요?



==============Comment================
우선 syscall_handler() 에서 pt가 어떤 변수인지를 확인해보시고, SYS_NUM이 어느위치에 들어가는지를 확인하신 다음에 *(pt+3)을 수정하시면 됩니다. 3을 더하는 이유는 기존 시스템 콜 호출을 하는 상황에서 시스템 콜 번호와 함수 인자를 전부 스택에 넣어서 호출했으므로 그에 따른 오프셋 차이입니다. 이번 과제에서 수정되어야 하는 부분입니다.

추가질문의 답입니다.
기존의 방법을 이해하시려면 함수 인자를 넘겨주는 syscall 매크로 함수에 임의의 값을 넣어서 gdb를 사용하여 레지스터값이나 메모리 위치의 값을 찍어보시면 될 것 같습니다.


==============Content================
명세중에서  " page fault를 발 생 시킨 메모리 주소의 실제 메모리 주소를 추가 " 라는 부분이 이해가 잘 안됩니다

virtual address 에서 상위 20bit를 이용하여 page directory, page table 를 탐색하는 것은 이해했습니다.

그런데 page fault를 발생시킨 메모리 주소의 실제 메모리 주소를 찾는다는것이 이미 해당 가상 메모리가 page table 에서 찾을 수 없는건데, 어떻게 물리 메모리가 존재하지 않는 가상메모리에 해당하는 물리 메모리를 찾아서 추가할 수 있는건가요?

명세에서 물리 메모리 시작주소와 가상 메모리에서 매핑될 시작주소를 명세해주긴 했습니다만 여기서 제가 생각할 수 있는 한계가 물리 메모리 시작주소부터 4KB 씩 page fault 가 일어날때마다 더해주면서 해당 물리 메모리 주소를 table 에 넣어놓는 것인데, 이렇게 하려면 따로 물리 메모리 위치를 가리키는 포인터를 전역변수로 지정해야 할 것 같은데 코드 수정이 함수 3곳으로 한정되어 있어 이것도 불가능한 방법같구요....

모든 질의란을 몇번이고 읽어봤는데도 잘 모르겠네요 ㅠㅠ...



==============Comment================
fault_addr를 변환하면 실제 메모리 주소를 리턴하는 함수가 있습니다.

paging.c의 페이징 초기화 함수와 palloc.c의 페이지 할당 함수를 살펴보시면 될 것 같습니다.


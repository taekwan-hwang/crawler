==============Content================
7-3에서 계속 막혀 질문합니다.

1. 명세에 "shell 프로세스에서 디렉토리 작업을 하기 위해서 프로세스 내에 cwd, rootdir 설정을 해줘야함"
위의 내용은 곧 inode_create함수를 통해 만든 루트 디렉토리의 결과를 활용해 cwd와 rootdir로 설정해줘야하는 것이라 생각했는데요.
inode_create의 반환값은 곳 inode table의 요소라고도 생각했는데, 해당 구조체 변수들과 process 구조체 cwd, rootdir변수가 무슨 관련이 있는지 잘 모르겠습니다.

2. inode create 시점에서는 사용중인 data block의 개수와 data block의 주소를 알 수는 없는 것이 맞나요?

3. inode_create 함수 호출마다 inode를 생성할 때 기존에 할당된 인덱스 이후부터, 즉 bitmap_set을 통한 검사가 완료된 인덱스값을 지닌 테이블만이 할당이 가능하다고 판단했는데 맞는 접근인가요?

4. 
명세를 보면 SSUOS에서는 전역변수 inode_tbl 배열의 인덱스값이 곧  sn_ino라고 나와있습니다.
inode_tbl은 256개의 인덱스값을 지니는데, 그렇다는 말은 sn_ino도 0~255의 값을 가질텐데요. 그런데 명세를 보면 실제로 ino은 2,3,4,5만 사용되고 있습니다. 그렇다는 말은 256개의 테이블을 할당하는 것은 변함 없지만 4개의 테이블만 사용하는건가요?

(부연 설명)
주석 중에 //Block 12~15 valid inode number = 256
에서 12~15 블럭이 무엇을 의미하는지 모르겠습니다.
그리고
//inode size = 64byte, block size = 4096byte, 64 inode/block
여기서 block size란 inode block을 의미하고 해당 블럭에 inode 하나의 크기는 64Byte, 최대 256개가 할당 가능하다는 의미라고 원래 받아들였는데, 7-3을 진행하면서 해당 정보가 유의미한건지 의문입니다..



==============Comment================
1. 이해하기 쉽게 설명하면 만약에 본인이 짜신 프로그램이 처음 딱 실행된 이후에 init_inode_table에 실행되게 되겠죠?
그 이후에 만약에 ls를 치게 되었을때 현재 프로세스가 어떤 아이노드를 사용하고 루트 아이노드가 누구 인지 알 수없게 되기 때문에 프로세스 구조체를 보시면 cwd,rootdir를 저장하는 변수를 가지고 있습니다.

2. inode create 시점에서 본인이 사용할 data block의 개수는 1개이며 전체로 보았을때 data block의 개수는 함수를 사용하여 확인하여 개수를 세보면 될것 같습니다.(함수의 경우 이미 구현이 되어있습니다.)

3. bitmap이 0을 가지고 있다면 당연히 비어있기 때문에 할당이 가능하다고 생각됩니다.
4. 생각하신것이 맞는것 같습니다.

부연설명. 부연설명을 이해하시지 못하셨다는다면 inode의 사이즈, 개수와 block의 크기의 관계를 생각해보시면 이해 할 수 있을것 같습니다.

감사합니다. 도움 주신 것 토대로 다시한번 생각해보겠습니다.


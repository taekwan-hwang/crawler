==============Content================
각 프로세스는 각각의 페이지디렉토리를 갖는다고 질문게시판을 읽다가 확인을 했습니다.
그런데 궁금한게, 페이징은 가상메모리 주소를 를 실제 메모리 주소와 매핑을 시켜주는데
굳이 왜 하나로 존재하는 메모리에 대한 맵핑을 해주는 페이지디렉토리가 프로세스마다 존재해야하는지 모르겟습니다.
하나의 페이지 디렉토리면 페이징을 다 해줄수 있는게 아닌가요???

같은 가상주소가 다른 프로세스에 들어가면 다른 실제주소를 가르켜야 하는건가요....???



==============Comment================
편의상 과제를 그렇게 설계한거예요. 지금 보면, 유저 프로세스가 2MB 이하 영역을 모두 접근할 수 있도록 설계돼있죠. 그러니까, 지금 이 프로그램 자체가 2MB 이하에 로드되는 커널 코드인 것인데... 유저 프로세스가 관련 전역변수나 코드를 사실상 모두 접근할 수 있어요. 예를 들어서... cur_process를 접근한다던가 하는게 가능하죠? page fault가 안나고... 근데, 실제 운영체제에서 이러면 되겠냐는거죠...

user process에는 2MB 이전을 매핑시켜주지 않고 pd 값을 인가하는게 맞지 않아요? 보안상 그렇잖아요ㅋㅋ;; 필요할 때만 커널로 전환해서, 즉 2MB 이하가 매핑돼있는 pd값을 가지는 프로세스로 전환해서 할일하고 다시 user process로 전환하는게 더 좋은 솔루션이죠. page directory/page table을 프로세스마다 따로 두는 이유는 보안적인 이유도 있는거죠~

